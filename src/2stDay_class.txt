1. Where 절 : 조건절

2. p.142 의 SQL 문장을 가독성이 높은 SQL 문장으로 작성
   현재의 SQL 문장은 JOIN 을 너무 복잡하게 되어 있어,
   향우 유지보수 및 인계 인수에 힘들 수 있음.

   어제까지 수업한 내용을 복습하면서, 가능하면
   유지보수가 쉬운 코드로 SQL을 리팩토링 해보세요.

   SQL 문이 교재의 코드보다 좀 더 길어져도 가독성이 높은게
   유지보수에 좋은 SQL임.

   조회 결과는 두 배우가 동시에 출연한 영화가 조회되어야 함.

   해결에 대한 아이디어나 방향성이 잘 생각이 나지 않는 경우면,
   교집합을 이용한 데이터 조회로 한 번 생각하면 도움이 됨.

use sakila;

desc actor;
/*
  film : film_id, title
  film_actor : film_id, actor_id
  actor : actor_id
*/

select film_id, title from film where film_id in
(
/* CUBA_BIRCH 배우가 출연한 영화 목록 */
select film_id from film_actor
 where actor_id in (
select actor_id
  from actor
 where first_name = 'CUBA' and last_name = 'BIRCH') /* 189 */
intersect
/* CATE_MCQUEEN 배우가 출연한 영화 목록 */
select film_id from film_actor
 where actor_id in (
select actor_id
  from actor
 where first_name = 'CATE' and last_name = 'MCQUEEN')); /* 128 */



3. self join

/* empno, mgr : 사원번호 
   empno : 사원 사원번호
   mgr : 관리자 사원번호

   사원번호와 본인의 상사를 같이 조회하려는 경우.
   하나의 emp 테이블이지만, 별도의 테이블 처럼 사용하면,
   사원정보와 관리자 정보를 각각의 테이블처럼 활용하면 됨.
   
   => self join
*/
select * from emp;


select e1.empno, e1.ename, e1.mgr,
       e2.empno as mgr_empno, e2.ename as mgr_ename
  from emp e1, emp e2
 where e1.mgr = e2.empno;

select count(*) from emp;  /* 현재 사원수 : 14명 */

select count(*)
  from emp e1, emp e2
 where e1.mgr = e2.empno;
 
/* self join 후 반드시 누락된 데이터가 없는지 반드시 다시 한 번 더 확인 
	: 차집합을 사용하면 좋음.
    
   현재는 사장님 사원정보에서 누락된 상태임. => outer join
*/

select e1.empno, e1.ename, e1.mgr,
	   e2.empno as mgr_empno, e2.ename as mgr_ename
  from emp e1 
  left outer join emp e2 
  on ( e1.mgr = e2.empno );
  
select count(*)
  from emp e1 
  left outer join emp e2 
  on ( e1.mgr = e2.empno );
 








